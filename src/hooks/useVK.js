import { useState, useEffect } from 'react';
import bridge from '@vkontakte/vk-bridge';

export const useVK = () => {
  const [user, setUser] = useState(null);
  const [isVKApp, setIsVKApp] = useState(false);

  useEffect(() => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–ø—É—â–µ–Ω–æ –ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤ VK
    const checkVKEnvironment = async () => {
      try {
        const userInfo = await bridge.send('VKWebAppGetUserInfo');
        setUser(userInfo);
        setIsVKApp(true);
      } catch (error) {
        console.log('–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ –Ω–µ –≤ VK:', error);
        setIsVKApp(false);
      }
    };

    checkVKEnvironment();
  }, []);

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ —Ä–µ–∫–ª–∞–º—ã
  const showAd = async () => {
    try {
      await bridge.send('VKWebAppShowNativeAds', { ad_format: 'reward' });
      return true;
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø–æ–∫–∞–∑–∞ —Ä–µ–∫–ª–∞–º—ã:', error);
      return false;
    }
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
  const sendStats = async (event, params = {}) => {
    try {
      await bridge.send('VKWebAppTapticNotificationOccurred', { type: 'success' });
      // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –æ—Ç–ø—Ä–∞–≤–∫—É —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –≤ VK
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', error);
    }
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–∏–±—Ä–∞—Ü–∏–∏
  const vibrate = async (type = 'light') => {
    try {
      await bridge.send('VKWebAppTapticNotificationOccurred', { type });
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –≤–∏–±—Ä–∞—Ü–∏–∏:', error);
    }
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ —Ä–µ–∫–æ—Ä–¥–∞ –Ω–∞ —Å—Ç–µ–Ω—É
  const shareScore = async (score) => {
    try {
      await bridge.send('VKWebAppShowWallPostBox', {
        message: `–Ø –Ω–∞–±—Ä–∞–ª ${score} –æ—á–∫–æ–≤ –≤ SpellJack! üÉè –ü–æ–ø—Ä–æ–±—É–π –ø–æ–±–∏—Ç—å –º–æ–π —Ä–µ–∫–æ—Ä–¥!`,
        attachments: 'https://vk.com/app_id' // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à ID –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
      });
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏:', error);
    }
  };

  return {
    user,
    isVKApp,
    showAd,
    sendStats,
    vibrate,
    shareScore
  };
};

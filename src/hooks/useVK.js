import { useState, useEffect } from 'react';
import bridge from '@vkontakte/vk-bridge';

export const useVK = () => {
  const [user, setUser] = useState(null);
  const [isVKApp, setIsVKApp] = useState(false);

  useEffect(() => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–ø—É—â–µ–Ω–æ –ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤ VK
    const checkVKEnvironment = async () => {
      try {
        const userInfo = await bridge.send('VKWebAppGetUserInfo');
        setUser(userInfo);
        setIsVKApp(true);
      } catch (error) {
        console.log('–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ –Ω–µ –≤ VK:', error);
        setIsVKApp(false);
      }
    };

    checkVKEnvironment();
  }, []);

  

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–∏–±—Ä–∞—Ü–∏–∏
  const vibrate = async (type = 'light') => {
    try {
      await bridge.send('VKWebAppTapticNotificationOccurred', { type });
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –≤–∏–±—Ä–∞—Ü–∏–∏:', error);
    }
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ —Ä–µ–∫–æ—Ä–¥–∞ –Ω–∞ —Å—Ç–µ–Ω—É
  const shareScore = async (score) => {
    try {
      // –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∫–æ—Ä–æ—Ç–∫–∏–º —Ç–µ–∫—Å—Ç–æ–º (–¥–æ 100 —Å–∏–º–≤–æ–ª–æ–≤)
      const result = await bridge.send('VKWebAppShare', {
        link: 'https://vk.com/app54024852',
        text: `–ù–∞–±—Ä–∞–ª ${score} –æ—á–∫–æ–≤ –≤ SpellJack! üÉè` // –ö–æ—Ä–æ—Ç–∫–∏–π —Ç–µ–∫—Å—Ç –¥–æ 100 —Å–∏–º–≤–æ–ª–æ–≤
      });
      
      console.log('Share result:', result);
      
    } catch (shareError) {
      console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ –õ–°:', shareError);
      // Fallback –¥–ª—è —Ä–µ–∂–∏–º–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
      alert(`üéâ –†–µ–∑—É–ª—å—Ç–∞—Ç: ${score} –æ—á–∫–æ–≤!\nüì§ –§—É–Ω–∫—Ü–∏—è "–ü–æ–¥–µ–ª–∏—Ç—å—Å—è" –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ.`);
    }
  };

  return {
    user,
    isVKApp,
    vibrate,
    shareScore
  };
};

import React from 'react';
import { observer } from 'mobx-react-lite';

const CardModal = observer(({ card, isOpen, onClose, onBuy, canAfford, showBuySection = true }) => {
  if (!isOpen || !card) return null;

  const handleBackdropClick = (e) => {
    if (e.target === e.currentTarget) {
      onClose();
    }
  };

  const isSpecialCard = card.type === 'special';
  const isRed = !isSpecialCard && (card.suit === '‚ô•' || card.suit === '‚ô¶');

  return (
    <div className="modal-backdrop" onClick={handleBackdropClick}>
      <div className="card-modal">
        <div className="modal-header">
          <h3>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–∞—Ä—Ç–µ</h3>
          <button className="modal-close" onClick={onClose}>‚úï</button>
        </div>

        <div className="modal-content">
          <div className="card-preview">
            {isSpecialCard ? (
              <div className="special-card-large">
                <div className="card-emoji-large">{card.value}</div>
                <div className="card-name-large">{card.name}</div>
                <div className="activation-type-large">{card.activationType}</div>
              </div>
            ) : (
              <div className={`card-large ${isRed ? 'red-card' : ''}`}>
                <div className="card-value-large">{card.value}</div>
                <div className="card-suit-large">{card.suit}</div>
              </div>
            )}
          </div>

          <div className="card-info">
            <h4>{isSpecialCard ? (card.name || card.id) : `${card.value}${card.suit}`}</h4>
            
            {isSpecialCard && (
              <div className="special-info">
                <div className="activation-info">
                  <strong>–¢–∏–ø –∞–∫—Ç–∏–≤–∞—Ü–∏–∏:</strong> {card.activationType}
                </div>
                <div className="activation-description">
                  {card.activationType === 'manual' && 'üñ±Ô∏è –ê–∫—Ç–∏–≤–∏—Ä—É–µ—Ç—Å—è –≤—Ä—É—á–Ω—É—é –≤ –∏–≥—Ä–µ'}
                  {card.activationType === 'passive' && '‚ö° –°—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏ —É—Å–ª–æ–≤–∏–∏'}
                  {card.activationType === 'auto' && 'üîÑ –ê–∫—Ç–∏–≤–∏—Ä—É–µ—Ç—Å—è —Å—Ä–∞–∑—É –ø—Ä–∏ –≤–∑—è—Ç–∏–∏ –∫–∞—Ä—Ç—ã'}
                </div>
              </div>
            )}

            <div className="card-description">
              <strong>–û–ø–∏—Å–∞–Ω–∏–µ:</strong>
              <p>{card.description || getCardDescription(card)}</p>
            </div>

            {showBuySection && (
              <div className="cost-section">
                <div className="card-cost-large">üí∞ {card.cost}</div>
                <button 
                  className={`buy-button-large ${!canAfford ? 'disabled' : ''}`}
                  onClick={() => onBuy(card)}
                  disabled={!canAfford}
                >
                  {canAfford ? '–ö—É–ø–∏—Ç—å' : '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–æ–Ω–µ—Ç'}
                </button>
              </div>
            )}
          </div>
        </div>
      </div>
    </div>
  );
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ–ø–∏—Å–∞–Ω–∏—è –æ–±—ã—á–Ω—ã—Ö –∫–∞—Ä—Ç
const getCardDescription = (card) => {
  if (card.type === 'special') {
    return card.description || `–°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –∫–∞—Ä—Ç–∞ —Å —ç—Ñ—Ñ–µ–∫—Ç–æ–º: ${card.effect}`;
  }
  
  const valueDescriptions = {
    'A': '–¢—É–∑ - –º–æ–∂–µ—Ç —Å—Ç–æ–∏—Ç—å 1 –∏–ª–∏ 11 –æ—á–∫–æ–≤',
    'K': '–ö–æ—Ä–æ–ª—å - —Å—Ç–æ–∏—Ç 10 –æ—á–∫–æ–≤',
    'Q': '–î–∞–º–∞ - —Å—Ç–æ–∏—Ç 10 –æ—á–∫–æ–≤', 
    'J': '–í–∞–ª–µ—Ç - —Å—Ç–æ–∏—Ç 10 –æ—á–∫–æ–≤'
  };

  if (valueDescriptions[card.value]) {
    return valueDescriptions[card.value];
  }

  return `–ß–∏—Å–ª–æ–≤–∞—è –∫–∞—Ä—Ç–∞ –¥–æ—Å—Ç–æ–∏–Ω—Å—Ç–≤–æ–º ${card.value} –æ—á–∫–æ–≤`;
};

export default CardModal;
